name: ASafariM CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-backend:
    name: 🛠 Build & Test .NET 9 Backend
    runs-on: ubuntu-latest

    env:
      DOTNET_VERSION: '9.0.x'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore Backend Dependencies
        run: dotnet restore ./ASafariM.Api/ASafariM.Api.csproj

      - name: Build Backend
        run: dotnet build ./ASafariM.Api/ASafariM.Api.csproj --configuration Release --no-restore

      - name: Run Backend Tests
        run: dotnet test ./ASafariM.Test/ASafariM.Test.csproj --no-build --verbosity normal

  build-frontend:
    name: 🌐 Build & Test React Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Use Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: yarn

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install Frontend Dependencies
        working-directory: ./ASafariM.Clients/asafarim-ui
        run: yarn install --immutable

      - name: Lint Code
        working-directory: ./ASafariM.Clients/asafarim-ui
        run: yarn lint

      - name: Run Frontend Tests
        working-directory: ./ASafariM.Clients/asafarim-ui
        run: yarn test:run

      - name: Build Frontend
        working-directory: ./ASafariM.Clients/asafarim-ui
        run: yarn build

  deploy:
    name: 🚀 Deploy
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Notify or Upload Artifacts
        run: echo "Manual or external deployment step goes here (e.g., SCP, rsync, SSH)"
